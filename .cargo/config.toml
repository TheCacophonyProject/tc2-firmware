[target.'cfg(all(target_arch = "arm", target_os = "none"))']
# Choose a default "cargo run" tool:
# - probe-run provides flashing and defmt via a hardware debugger
# - cargo embed offers flashing, rtt, defmt and a gdb server via a hardware debugger
#     it is configured via the Embed.toml in the root of this project
# - elf2uf2-rs loads firmware over USB when the rp2040 is in boot mode

# Default runner shows line numbers etc.
#runner = "probe-run --chip RP2040"

# Current runner omits line numbers, just to be a bit easier to parse
runner = [
    "probe-rs",
    "run",
    "--chip",
    "RP2040",
    "--log-format",
    "{L} {s}"
]
#runner = [
#  "probe-rs",
#  "attach",
#  "--chip",
#  "RP2040",
#  "--log-format",
#  "{L}{s}"
#]
#runner = "arm-none-eabi-gdb -q -x openocd.gdb"
#runner = "cargo embed"
#runner = "elf2uf2-rs -d"
#runner = "probe-rs-cli run --chip RP2040 --protocol swd"
#runner = "probe-rs run --chip RP2040"

linker = "flip-link"

rustflags = [
    "-C",
    "link-arg=--nmagic",
    "-C",
    "link-arg=-Tlink.x",
    "-C",
    "link-arg=-Tdefmt.x",
    # Code-size optimizations.
    #   trap unreachable can save a lot of space, but requires nightly compiler.
    #   uncomment the next line if you wish to enable it
    # "-Z", "trap-unreachable=no",
    "-C",
    "llvm-args=--inline-threshold=5",
    "-C",
    "no-vectorize-loops",
]


[build]
target = "thumbv6m-none-eabi"

[alias]
test-host = "test --workspace --features std --no-default-features --target=x86_64-unknown-linux-gnu"

[env]
DEFMT_LOG = "debug"
#DEFMT_LOG = "off"
